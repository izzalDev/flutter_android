name: Build and Release Workflow

on:
  push:
    branches: '*'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: '*'

jobs:

  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
            distribution: 'temurin'
            java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Run Flutter test
        run: flutter test

      - name: Build android apk
        run: flutter build apk --split-per-abi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ github.run_id }}.zip
          path: build/app/outputs/apk/release/*.apk

  release:
    needs: test-and-build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Check valid version
        id: get-version
        run: |
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          pubspec_version=$(grep '^version:' "$PUBSPEC_FILE" | awk '{print $2}')
          if [[ "$pubspec_version" != "$version" ]]; then
            echo "Mismatch: pubspec.yaml version ($pubspec_version) is not equal to GitHub version ($version)"
            exit 1
          else
            echo "Version match: pubspec.yaml version and GitHub version are the same."
          fi

      - name: Check valid changelog
        id: check-changelog
        run: |
          if grep -q "## \[${{ steps.get-version.outputs.version }}\]" "CHANGELOG.md"; then
            echo "Changelog entry found for version $current_version."
          else
            echo "No changelog entry found for version ${{ steps.get-version.outputs.version }} in CHANGELOG.md."
            exit 1
          fi

      - name: Download artifact from test-and-build job
        id: donwload-artifact
        uses: actions/download-artifact@v4
        with:
          name: apk-${{ github.run_id }}.zip

      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v2
    
      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0
        with:
          string-case: 'pascalCase'

      - name: Rename release assets
        run: |
            for ARCH in armeabi-v7a arm64-v8a x86_64; do
                mv "${{ steps.donwload-artifact.outputs.download-path }}/app-${ARCH}-release.apk" \
                "${{ steps.repo-name.outputs.repository-name }}-v${{ steps.get-version.outputs.version }}-${ARCH}.apk"
            done

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release v${{ steps.get-version.outputs.version }}
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
          files: ${{ steps.donwload-artifact.outputs.download-path }}/*.apk

      
      - name: Remove tag on failed
        if: failure()
        uses: dev-drprasad/delete-tag-and-release@v1.1
        with:
          tag_name: v${{ steps.get-version.outputs.version }}
          delete_release: true
          github_token: ${{ secrets.GITHUB_TOKEN }}